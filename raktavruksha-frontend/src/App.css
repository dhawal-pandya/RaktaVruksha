/* src/App.css */

/* Base styles for ‚òÄÔ∏è mode */
:root {
  --background-color: #f0f2f5;
  --header-bg-color: #ffffff;
    --text-color: #000000;
  --border-color: #ddd;
  --button-bg-color: #007bff;
  --button-text-color: #fff;
  --button-hover-bg-color: #0056b3;

  /* D3 specific colors */
  --svg-background: #f5f5f5;
  --link-color: #555;
  --link-marriage-color: #8B4513; /* Brown for marriage links */
  --node-stroke-color: #fff; /* Node outline */
  --person-node-fill: #f7f7f7; /* Person rectangle fill */
  --person-node-border-fallback: #ccc; /* Fallback if family color not found */
  --marriage-node-fill: #ffd700; /* Marriage circle fill */
  --marriage-node-stroke: #ccad00; /* Marriage circle stroke */
}

/* Dark mode styles */
body.üåô {
  --background-color: #282c34;
  --text-color: #ffffff;
  --header-bg-color: #3a3f4a;
  --border-color: #555;
  --button-bg-color: #61dafb;
  --button-text-color: #282c34;
  --button-hover-bg-color: #21a1f1;

  /* D3 specific colors for dark mode */
  --svg-background: #333740;
  --link-color: #a0a0a0;
  --link-marriage-color: #b08d6d; /* Slightly lighter brown for üåô mode */
  --node-stroke-color: #555;
  --person-node-fill: #444952;
  --person-node-border-fallback: #888;
  --marriage-node-fill: #e6b800; /* Slightly darker gold */
  --marriage-node-stroke: #b38f00;
}

/* General App Layout */
#root {
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  background-color: var(--background-color);
  color: var(--text-color);
  transition: background-color 0.3s ease, color 0.3s ease; /* Smooth transition for theme change */
}

.App {
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  position: relative;
}

.app-header {
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px 20px;
  background-color: var(--header-bg-color);
  border-bottom: 1px solid var(--border-color);
  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
  box-sizing: border-box;
}

h1 {
  margin: auto;
  font-family: 'Montserrat', sans-serif;
  font-weight: 100;
  color: var(--text-color);
  font-size: 1.8em;
}

.theme-toggle-button {
  padding: 5px 7px;
  border: none;
  border-radius: 5px;
  background-color: var(--button-bg-color);
  color: var(--button-text-color);
  cursor: pointer;
  font-size: 0.9em;
  transition: background-color 0.2s ease;
}

.theme-toggle-button:hover {
  background-color: var(--button-hover-bg-color);
}

.loading-state, .error-state, .no-data-state {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-grow: 1;
  font-size: 1.2em;
  color: var(--text-color);
}

/* FamilyTree Component Styles */
.family-tree-container {
  position: relative;
  width: 100%;
  height: calc(100vh - 100px); /* Adjust height to account for header */
  border: 1px solid var(--border-color);
  background-color: var(--svg-background); /* Uses SVG background var */
  overflow: hidden; /* D3 handles zooming */
}

.tree-controls {
  position: absolute;
  top: 10px;
  left: 10px;
  z-index: 100;
  display: flex;
  gap: 10px;
}

.control-button {
  padding: 5px 10px;
  border: none;
  border-radius: 5px;
  background-color: var(--button-bg-color);
  color: var(--button-text-color);
  cursor: pointer;
  font-size: 0.7em;
  transition: background-color 0.2s ease;
}

.control-button:hover {
  background-color: var(--button-hover-bg-color);
}

/* D3 Node and Link Styles (now uses CSS variables) */
.node rect {
  cursor: pointer;
  /* Box shadow applied dynamically by D3, but could be handled by CSS if needed */
  transition: transform 0.2s ease-in-out;
}

.node rect:hover {
  transform: scale(1.05);
  /* D3 handles the click event, so hover for visual feedback */
}

.first-name-text, .last-name-text { /* Specific classes for text elements */
  font-family: Arial, sans-serif;
  font-size: 14px;
  fill: var(--text-color); /* Now uses the general text color variable */
  pointer-events: none;
  user-select: none; /* Prevent text selection on drag */
}

/* No specific CSS for link and node circles/rects directly, as D3 applies fill/stroke attributes */
/* However, we target their colors within the D3 code using `var()` */